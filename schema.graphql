enum ListEventStatus {
  LISTING
  AUCTIONING
  SOLD
  CANCELED
}

enum CollectionCategory {
  ART
  FUTURISTIC
  PFP_MODEL
  GAMING
  JAPAN
  CAR
}

type AuctionData {
  minBid: BigInt!
  startTime: DateTime!
  endTime: DateTime!
  startPrice: BigInt!
}

type ListEvent @entity {
  id: ID!
  collection: Collection! @index
  token: Token! @index
  payToken: PaymentToken!
  price: BigInt!
  seller: String!
  timestamp: DateTime!
  txHash: String!
  status: ListEventStatus!
  auctionData: AuctionData
  buyer: String
  bidderEvents: [BidEvent!] @derivedFrom(field: "listEvent")
}

type BidEvent @entity {
  id: ID!
  listEvent: ListEvent!
  price: BigInt!
  bidder: String!
  timestamp: DateTime!
  txHash: String!
}

type OfferEvent @entity {
  id: ID!
  listEvent: ListEvent!
  price: BigInt!
  offerer: String!
  timestamp: DateTime!
  accepted: Boolean
  txHash: String!
}

type Collection @entity {
  id: ID!
  name: String!
  symbol: String!
  category: CollectionCategory
}

type Token @entity {
  id: ID! # collection-tokenId
  collection: Collection!
  tokenId: BigInt!
  name: String
  description: String
  animation: String
  uri: String
  image: String
  attributes: [Attribute!]
  file: File
}

type Attribute {
  traitType: String!
  value: String!
}

type File {
  path: String!
  mime: String!
}

type PaymentToken @entity {
  id: ID!
  name: String!
  symbol: String!
  decimals: Int!
}
